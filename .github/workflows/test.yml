name: Only tests ðŸ§ª

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions: write-all

jobs:
  test:
    name: FFS Tests ðŸ§ª
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Test
      - name: Run tests
        uses: game-ci/unity-test-runner@v4
        id: testsStep
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;pathFilters:+**/Assets/Code/**;assemblyFilters:-*unity*,-*Meryel*,-*meryel*'

      # Store tests results in artifact
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Test results
          path: ${{ steps.testsStep.outputs.artifactsPath }}

      # Store tests results coverage in artifact
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Coverage results
          path: ${{ steps.testsStep.outputs.coveragePath }}

      # Upload coverage results to pages if main to use badge
      - name: Deploy coverage results to GitHub Pages ðŸš€
        if: github.ref == 'refs/heads/main'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: ${{ steps.testsStep.outputs.coveragePath }}
          target-folder: /coverage
